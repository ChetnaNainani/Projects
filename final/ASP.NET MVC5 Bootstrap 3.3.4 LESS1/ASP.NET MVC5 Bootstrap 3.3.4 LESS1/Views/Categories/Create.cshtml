@model ASP.NET_MVC5_Bootstrap_3._3._4_LESS1.Models.Category
@Scripts.Render("~/TestBundle/Jqueryfiles")
@{
    ViewBag.Title = "Create";
}

<add key="ClientValidationEnabled" value="true" />
<add key="UnobtrusiveJavaScriptEnabled" value="true" />

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
<link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
<script src="bootstrap/js/bootstrap.min.js"></script>

@Scripts.Render("~/TestBundle/Jqueryfiles")


<add key="ClientValidationEnabled" value="true" />
<add key="UnobtrusiveJavaScriptEnabled" value="true" />


<script>
    $(document).ready(function () {
        $("#errorName").hide();
        $("#errorCode").hide();
        $("#errorDisplay").hide();
        $("#Name").on("keyup change", function () {
            //alert("Name changed");

            $("#errorName").hide();
            $("#create").attr("disabled", false);
            $("#Name").removeAttr("style");
            nName = $("#Name").val();
            if (nName === "") {

                $("#errorName").show();
                $("#errorName").html("*Name is required");
                $("#errorName").css("color", "red");
                $("#Name").css("border", " 1px solid red");
                $("#create").attr("disabled", true);
            }

        });

        $("#Code").on("keyup change", function () {
            //alert("Name changed");

            $("#errorCode").hide();
            $("#create").attr("disabled", false);
            $("#Code").removeAttr("style");
            cName = $("#Code").val();
            if (cName === "") {

                $("#errorCode").show();
                $("#errorCode").html("*Code is required");
                $("#errorCode").css("color", "red");
                $("#Code").css("border", " 1px solid red");
                $("#create").attr("disabled", true);
            }

        });

        $("#DisplayName").on("keyup change", function () {
            //alert("Name changed");

            $("#errorDisplay").hide();
            $("#create").attr("disabled", false);
            $("#DisplayName").removeAttr("style");
            dName = $("#DisplayName").val();
            if (dName === "") {

                $("#errorDisplay").show();
                $("#errorDisplay").html("*Display Name is required");
                $("#errorDisplay").css("color", "red");
                $("#DisplayName").css("border", " 1px solid red");
                $("#create").attr("disabled", true);
            }

        });

        $("#DisplayPriority").on("keyup change", function () {
            //alert("Name changed");

            $("#errorPriority").hide();
            $("#create").attr("disabled", false);
            $("#DisplayPriority").removeAttr("style");
            pName = $("#DisplayPriority").val();
            if (pName === "") {

                $("#errorPriority").show();
                $("#errorPriority").html("*Display Priority is required");
                $("#errorPriority").css("color", "red");
                $("#DisplayPriority").css("border", " 1px solid red");
                $("#create").attr("disabled", true);
            }

        });

    });
</script>

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Category</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
       
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                <div class="error" id="errorName" style="display: inline"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                <div class="error" id="errorCode" style="display: inline"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
                <div class="error" id="errorDisplay" style="display: inline"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DisplayPriority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DisplayPriority, new { htmlAttributes = new { @class = "form-control",min=1}  })
                @Html.ValidationMessageFor(model => model.DisplayPriority, "", new { @class = "text-danger" })
                <div class="error" id="errorPriority" style="display: inline"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MetaTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.MetaKeywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MetaKeywords, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaKeywords, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MetaDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.isActive, new { @style = " height:15px; width:15px;" })
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create"  id="create"class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new {style="color:white;" })
</div>
@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/bootstrap")
}