//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VendorProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorProductSKUField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorCategoryId {
            get {
                return this.VendorCategoryIdField;
            }
            set {
                if ((this.VendorCategoryIdField.Equals(value) != true)) {
                    this.VendorCategoryIdField = value;
                    this.RaisePropertyChanged("VendorCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorProductId {
            get {
                return this.VendorProductIdField;
            }
            set {
                if ((this.VendorProductIdField.Equals(value) != true)) {
                    this.VendorProductIdField = value;
                    this.RaisePropertyChanged("VendorProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorProductSKU {
            get {
                return this.VendorProductSKUField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorProductSKUField, value) != true)) {
                    this.VendorProductSKUField = value;
                    this.RaisePropertyChanged("VendorProductSKU");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CatalogMapping", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class CatalogMapping : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CatalogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeaturedDisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HomeProductDisplayOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isFeaturedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isHomeProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CatalogId {
            get {
                return this.CatalogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CatalogIdField, value) != true)) {
                    this.CatalogIdField = value;
                    this.RaisePropertyChanged("CatalogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIdField, value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeaturedDisplayOrder {
            get {
                return this.FeaturedDisplayOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.FeaturedDisplayOrderField, value) != true)) {
                    this.FeaturedDisplayOrderField = value;
                    this.RaisePropertyChanged("FeaturedDisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeProductDisplayOrder {
            get {
                return this.HomeProductDisplayOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeProductDisplayOrderField, value) != true)) {
                    this.HomeProductDisplayOrderField = value;
                    this.RaisePropertyChanged("HomeProductDisplayOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIdField, value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isFeatured {
            get {
                return this.isFeaturedField;
            }
            set {
                if ((this.isFeaturedField.Equals(value) != true)) {
                    this.isFeaturedField = value;
                    this.RaisePropertyChanged("isFeatured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isHomeProduct {
            get {
                return this.isHomeProductField;
            }
            set {
                if ((this.isHomeProductField.Equals(value) != true)) {
                    this.isHomeProductField = value;
                    this.RaisePropertyChanged("isHomeProduct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Catalog", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class Catalog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAllProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAutoSyncField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAllProduct {
            get {
                return this.EnableAllProductField;
            }
            set {
                if ((this.EnableAllProductField.Equals(value) != true)) {
                    this.EnableAllProductField = value;
                    this.RaisePropertyChanged("EnableAllProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAutoSync {
            get {
                return this.EnableAutoSyncField;
            }
            set {
                if ((this.EnableAutoSyncField.Equals(value) != true)) {
                    this.EnableAutoSyncField = value;
                    this.RaisePropertyChanged("EnableAutoSync");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceForInsert")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisplayPriorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaKeywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetaTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isActiveField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayPriority {
            get {
                return this.DisplayPriorityField;
            }
            set {
                if ((this.DisplayPriorityField.Equals(value) != true)) {
                    this.DisplayPriorityField = value;
                    this.RaisePropertyChanged("DisplayPriority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaDescription {
            get {
                return this.MetaDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaDescriptionField, value) != true)) {
                    this.MetaDescriptionField = value;
                    this.RaisePropertyChanged("MetaDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaKeywords {
            get {
                return this.MetaKeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaKeywordsField, value) != true)) {
                    this.MetaKeywordsField = value;
                    this.RaisePropertyChanged("MetaKeywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetaTitle {
            get {
                return this.MetaTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaTitleField, value) != true)) {
                    this.MetaTitleField = value;
                    this.RaisePropertyChanged("MetaTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isActive {
            get {
                return this.isActiveField;
            }
            set {
                if ((this.isActiveField.Equals(value) != true)) {
                    this.isActiveField = value;
                    this.RaisePropertyChanged("isActive");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertProduct", ReplyAction="http://tempuri.org/IService1/InsertProductResponse")]
        void InsertProduct(WebApi.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectProduct", ReplyAction="http://tempuri.org/IService1/SelectProductResponse")]
        WebApi.ServiceReference1.Product[] SelectProduct(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCatalogMapping", ReplyAction="http://tempuri.org/IService1/InsertCatalogMappingResponse")]
        void InsertCatalogMapping(WebApi.ServiceReference1.CatalogMapping product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCatalogMapping", ReplyAction="http://tempuri.org/IService1/SelectCatalogMappingResponse")]
        WebApi.ServiceReference1.CatalogMapping[] SelectCatalogMapping(string search);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCatalog", ReplyAction="http://tempuri.org/IService1/InsertCatalogResponse")]
        void InsertCatalog(WebApi.ServiceReference1.Catalog product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCatalog", ReplyAction="http://tempuri.org/IService1/SelectCatalogResponse")]
        WebApi.ServiceReference1.Catalog[] SelectCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCategory", ReplyAction="http://tempuri.org/IService1/InsertCategoryResponse")]
        void InsertCategory(WebApi.ServiceReference1.Category product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SelectCategory", ReplyAction="http://tempuri.org/IService1/SelectCategoryResponse")]
        WebApi.ServiceReference1.Category[] SelectCategory();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApi.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApi.ServiceReference1.IService1>, WebApi.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void InsertProduct(WebApi.ServiceReference1.Product product) {
            base.Channel.InsertProduct(product);
        }
        
        public WebApi.ServiceReference1.Product[] SelectProduct(string search) {
            return base.Channel.SelectProduct(search);
        }
        
        public void InsertCatalogMapping(WebApi.ServiceReference1.CatalogMapping product) {
            base.Channel.InsertCatalogMapping(product);
        }
        
        public WebApi.ServiceReference1.CatalogMapping[] SelectCatalogMapping(string search) {
            return base.Channel.SelectCatalogMapping(search);
        }
        
        public void InsertCatalog(WebApi.ServiceReference1.Catalog product) {
            base.Channel.InsertCatalog(product);
        }
        
        public WebApi.ServiceReference1.Catalog[] SelectCatalog() {
            return base.Channel.SelectCatalog();
        }
        
        public void InsertCategory(WebApi.ServiceReference1.Category product) {
            base.Channel.InsertCategory(product);
        }
        
        public WebApi.ServiceReference1.Category[] SelectCategory() {
            return base.Channel.SelectCategory();
        }
    }
}
